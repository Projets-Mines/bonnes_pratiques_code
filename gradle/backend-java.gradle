apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: "info.solidsoft.pitest"

repositories {
    mavenCentral()
}

ext {
    springBootVersion = "2.4.4"
    postgresVersion = "42.2.19"
    flywayVersion = "7.8.1"
    hsqldbVersion = "2.6.0"
    commonDbcpVersion = "2.8.0"
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testCompileOnly("org.springframework:spring-test:5.3.7")
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testImplementation("org.springframework.boot:spring-boot-starter-test:2.4.4")

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.9.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.9.0'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        html.enabled true
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}


sonarqube {

    properties {
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.login", "6fcedd98a82d683292668d5f84fb4b1153d44877"
        property "sonar.coverage.jacoco.xmlReportPaths", "./build/reports/jacoco/report.xml"
    }

}

pitest {
    junit5PluginVersion = '0.14'
    threads = 4
    pitestVersion = "1.6.5"
    failWhenNoMutations = false


    targetClasses = ["org.sam.mines.*"]
    testPlugin = "junit5"
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    timeoutConstInMillis = 6000
    excludedTestClasses = ['*.*Config']
}