/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.sam.mines.address.api.controller;

import org.sam.mines.address.api.model.Town;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-05-31T15:30:15.876883400+02:00[Europe/Paris]")
@Validated
@Api(value = "town", description = "the town API")
public interface TownApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /town : Create a town
     *
     * @param town  (required)
     * @return Null response (status code 201)
     */
    @ApiOperation(value = "Create a town", nickname = "create", notes = "", response = Town.class, tags={ "town", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Null response", response = Town.class) })
    @PostMapping(
        value = "/town",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Town> create(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Town town) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\", \"postCode\" : \"postCode\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /town/{id} : Delete a town.
     *
     * @param id  (required)
     * @return Town has been deleted. (status code 204)
     */
    @ApiOperation(value = "Delete a town.", nickname = "delete", notes = "", response = String.class, tags={ "town", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Town has been deleted.", response = String.class) })
    @DeleteMapping(
        value = "/town/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<String> delete(@ApiParam(value = "",required=true) @PathVariable("id") String id) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /town/{id} : Info for a specific town
     *
     * @param id The id of the town to retrieve (required)
     * @return Expected response to a valid request (status code 200)
     */
    @ApiOperation(value = "Info for a specific town", nickname = "get", notes = "", response = Town.class, tags={ "town", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expected response to a valid request", response = Town.class) })
    @GetMapping(
        value = "/town/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<Town> get(@ApiParam(value = "The id of the town to retrieve",required=true) @PathVariable("id") String id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\", \"postCode\" : \"postCode\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /town : List all towns
     *
     * @return An array of towns (status code 200)
     */
    @ApiOperation(value = "List all towns", nickname = "list", notes = "", response = Town.class, responseContainer = "List", tags={ "town", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "An array of towns", response = Town.class, responseContainer = "List") })
    @GetMapping(
        value = "/town",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Town>> list() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\", \"postCode\" : \"postCode\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /town : Update a town
     *
     * @param town  (required)
     * @return Null response (status code 200)
     */
    @ApiOperation(value = "Update a town", nickname = "update", notes = "", response = Town.class, tags={ "town", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Null response", response = Town.class) })
    @PutMapping(
        value = "/town",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Town> update(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Town town) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\", \"postCode\" : \"postCode\", \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
